function dph = rhs_K2d2_slow(ph, m, omega, alpha)
% compute P^{2,2}, as defined in the paper.
% if N is large this function is slower than "rhs_K2d2", but the result is the same.

N = length(ph);

%the following formulas are copied from mathematica. (see mathematica notebook in this github repository).
fct0 =  1/(N*m);
R01 = fct0*sum(-cos(ph'-ph+alpha)+cos(alpha), 2);

fct1 = 1/(2*N*(m^2+omega^2));
mat1 = (-2).*omega.*cos(alpha+(-1).*ph)+(-3).*omega.*cos(alpha+ph)+4.* ...
  omega.*cos(alpha+transpose(ph))+2.*omega.*cos(alpha+(-2).*ph+ ...
  transpose(ph))+(-1).*omega.*cos(alpha+(-1).*ph+2.*transpose(ph))+ ...
  2.*m.*sin(alpha+(-1).*ph)+(-3).*m.*sin(alpha+ph)+4.*m.*sin(alpha+ ...
  transpose(ph))+(-2).*m.*sin(alpha+(-2).*ph+transpose(ph))+(-1).* ...
  m.*sin(alpha+(-1).*ph+2.*transpose(ph));
R11 = fct1*sum(mat1, 2);

fct2 = -1/(4*N*m*(m^4+5*m^2*omega^2 + 4*omega^4));
mat2 = (-10).*m.^4.*cos(alpha)+(-40).*m.^2.*omega.^2.*cos(alpha)+2.* ...
  m.^4.*cos(alpha+(-2).*ph)+(-10).*m.^2.*omega.^2.*cos(alpha+(-2).* ...
  ph)+6.*m.^4.*cos(alpha+2.*ph)+(-12).*m.^2.*omega.^2.*cos(alpha+2.* ...
  ph)+(-2).*m.^4.*cos(alpha+(-3).*ph+transpose(ph))+10.*m.^2.* ...
  omega.^2.*cos(alpha+(-3).*ph+transpose(ph))+12.*m.^4.*cos(alpha+( ...
  -1).*ph+transpose(ph))+48.*m.^2.*omega.^2.*cos(alpha+(-1).*ph+ ...
  transpose(ph))+(-10).*m.^4.*cos(alpha+ph+transpose(ph))+14.*m.^2.* ...
  omega.^2.*cos(alpha+ph+transpose(ph))+4.*m.^4.*cos(alpha+2.* ...
  transpose(ph))+(-2).*m.^2.*omega.^2.*cos(alpha+2.*transpose(ph))+( ...
  -2).*m.^4.*cos(alpha+(-2).*ph+2.*transpose(ph))+(-8).*m.^2.* ...
  omega.^2.*cos(alpha+(-2).*ph+2.*transpose(ph))+2.*m.^3.*omega.* ...
  sin(alpha)+8.*m.*omega.^3.*sin(alpha)+8.*m.^3.*omega.*sin(alpha+( ...
  -2).*ph)+(-4).*m.*omega.^3.*sin(alpha+(-2).*ph)+(-18).*m.^3.* ...
  omega.*sin(alpha+2.*ph)+(-8).*m.^3.*omega.*sin(alpha+(-3).*ph+ ...
  transpose(ph))+4.*m.*omega.^3.*sin(alpha+(-3).*ph+transpose(ph))+( ...
  -4).*m.^3.*omega.*sin(alpha+(-1).*ph+transpose(ph))+(-16).*m.* ...
  omega.^3.*sin(alpha+(-1).*ph+transpose(ph))+28.*m.^3.*omega.*sin( ...
  alpha+ph+transpose(ph))+4.*m.*omega.^3.*sin(alpha+ph+transpose(ph) ...
  )+(-10).*m.^3.*omega.*sin(alpha+2.*transpose(ph))+(-4).*m.* ...
  omega.^3.*sin(alpha+2.*transpose(ph))+2.*m.^3.*omega.*sin(alpha+( ...
  -2).*ph+2.*transpose(ph))+8.*m.*omega.^3.*sin(alpha+(-2).*ph+2.* ...
  transpose(ph));

R21 = fct2*sum(mat2,2);


grad0H = 1/N*sin(ph-ph'+alpha);
grad0H = grad0H - diag(diag(grad0H));
grad0H = grad0H + diag(-sum(grad0H,1));

grad1H = 1/N * (sin(ph)-sin(ph')).*sin(ph-ph'+alpha);
grad1H = grad1H - diag(diag(grad1H));
grad1H = grad1H + diag(-sum(grad1H,1));

grad2H = 1/N * sin(ph').*(sin(ph')-sin(ph)).*sin(ph-ph'+alpha);
grad2H = grad2H - diag(diag(grad2H));
grad2H = grad2H + diag(-sum(grad2H,1));


dph = grad0H'*R21 + grad1H'*R11 + grad2H'*R01;


end